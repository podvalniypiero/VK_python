# Напишите декоратор, который будет принимать натуральное число n – число повторений – и будет повторять
# вызов декорированной функции n раз, а также возвращать значение из последнего вызова.

# Для реализации данной задачи можно написать декоратор repeat_deco, который принимает на вход количество
# повторений n. Внутри декоратора будет создана функция-обертка, которая будет вызывать декорированную функцию
# n раз. После выполнения цикла вызовов функции-обертки будет возвращено значение из последнего вызова.
def repeat_deco(n=1):
   def decorator(func):
       def wrapper(*args, **kwargs):
           result = None
           for _ in range(n):
               result = func(*args, **kwargs)
           return result
       return wrapper
   return decorator

code = []
while data := input():
   code.append(data)
code = "\n".join(code)
exec(code)